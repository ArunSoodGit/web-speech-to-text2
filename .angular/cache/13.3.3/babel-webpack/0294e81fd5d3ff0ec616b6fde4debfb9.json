{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ArgumentNullError } from \"../common/Exports\";\nimport { HeaderNames } from \"./HeaderNames\";\nimport { AuthInfo } from \"./IAuthentication\";\n/**\n * @class\n */\n\nexport class CognitiveSubscriptionKeyAuthentication {\n  /**\n   * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\n   * @constructor\n   * @param {string} subscriptionKey - The subscription key\n   */\n  constructor(subscriptionKey) {\n    if (!subscriptionKey) {\n      throw new ArgumentNullError(\"subscriptionKey\");\n    }\n\n    this.privAuthInfo = new AuthInfo(HeaderNames.AuthKey, subscriptionKey);\n  }\n  /**\n   * Fetches the subscription key.\n   * @member\n   * @function\n   * @public\n   * @param {string} authFetchEventId - The id to fetch.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  fetch(authFetchEventId) {\n    return Promise.resolve(this.privAuthInfo);\n  }\n  /**\n   * Fetches the subscription key.\n   * @member\n   * @function\n   * @public\n   * @param {string} authFetchEventId - The id to fetch.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  fetchOnExpiry(authFetchEventId) {\n    return Promise.resolve(this.privAuthInfo);\n  }\n\n} //# sourceMappingURL=CognitiveSubscriptionKeyAuthentication.js.map","map":null,"metadata":{},"sourceType":"module"}