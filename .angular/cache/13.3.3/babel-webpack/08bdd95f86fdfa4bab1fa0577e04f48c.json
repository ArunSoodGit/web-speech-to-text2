{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\nimport { EventType, PlatformEvent } from \"../common/Exports\";\nexport class SpeechRecognitionEvent extends PlatformEvent {\n  constructor(eventName, requestId, sessionId, eventType = EventType.Info) {\n    super(eventName, eventType);\n    this.privRequestId = requestId;\n    this.privSessionId = sessionId;\n  }\n\n  get requestId() {\n    return this.privRequestId;\n  }\n\n  get sessionId() {\n    return this.privSessionId;\n  }\n\n}\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\n  constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n    super(\"RecognitionTriggeredEvent\", requestId, sessionId);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n}\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\n  constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n    super(\"ListeningStartedEvent\", requestId, sessionId);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n}\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\n  constructor(requestId, authFetchEventid, sessionId) {\n    super(\"ConnectingToServiceEvent\", requestId, sessionId);\n    this.privAuthFetchEventid = authFetchEventid;\n  }\n\n  get authFetchEventid() {\n    return this.privAuthFetchEventid;\n  }\n\n}\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\n  constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId) {\n    super(\"RecognitionStartedEvent\", requestId, sessionId);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n    this.privAuthFetchEventId = authFetchEventId;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n  get authFetchEventId() {\n    return this.privAuthFetchEventId;\n  }\n\n}\nexport var RecognitionCompletionStatus = /*#__PURE__*/(() => {\n  (function (RecognitionCompletionStatus) {\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"Success\"] = 0] = \"Success\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceError\"] = 1] = \"AudioSourceError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceTimeout\"] = 2] = \"AudioSourceTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchError\"] = 3] = \"AuthTokenFetchError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchTimeout\"] = 4] = \"AuthTokenFetchTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnAuthorized\"] = 5] = \"UnAuthorized\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectTimeout\"] = 6] = \"ConnectTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectError\"] = 7] = \"ConnectError\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"ClientRecognitionActivityTimeout\"] = 8] = \"ClientRecognitionActivityTimeout\";\n    RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnknownError\"] = 9] = \"UnknownError\";\n  })(RecognitionCompletionStatus || (RecognitionCompletionStatus = {}));\n\n  return RecognitionCompletionStatus;\n})();\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\n  constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId, serviceTag, status, error) {\n    super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n    this.privAuthFetchEventId = authFetchEventId;\n    this.privStatus = status;\n    this.privError = error;\n    this.privServiceTag = serviceTag;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n  get authFetchEventId() {\n    return this.privAuthFetchEventId;\n  }\n\n  get serviceTag() {\n    return this.privServiceTag;\n  }\n\n  get status() {\n    return this.privStatus;\n  }\n\n  get error() {\n    return this.privError;\n  }\n\n} //# sourceMappingURL=RecognitionEvents.js.map","map":null,"metadata":{},"sourceType":"module"}