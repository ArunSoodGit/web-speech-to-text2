{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ProxyInfo, WebsocketConnection } from \"../../common.browser/Exports\";\nimport { createGuid } from \"../../common/Exports\";\nimport { Contracts } from \"../../sdk/Contracts\";\nimport { PropertyId } from \"../../sdk/Exports\";\nimport { ConnectionFactoryBase } from \"../ConnectionFactoryBase\";\nimport { ConversationConnectionConfig } from \"./ConversationConnectionConfig\";\nimport { ConversationWebsocketMessageFormatter } from \"./ConversationWebsocketMessageFormatter\";\n/**\n * Create a connection to the Conversation Translator websocket for sending instant messages and commands, and for receiving translated messages.\n * The conversation must already have been started or joined.\n */\n\nexport class ConversationConnectionFactory extends ConnectionFactoryBase {\n  create(config, authInfo, connectionId) {\n    const endpointHost = config.parameters.getProperty(PropertyId.ConversationTranslator_Host, ConversationConnectionConfig.host);\n    const correlationId = config.parameters.getProperty(PropertyId.ConversationTranslator_CorrelationId, createGuid());\n    const endpoint = `wss://${endpointHost}${ConversationConnectionConfig.webSocketPath}`;\n    const token = config.parameters.getProperty(PropertyId.ConversationTranslator_Token, undefined);\n    Contracts.throwIfNullOrUndefined(token, \"token\");\n    const queryParams = {};\n    queryParams[ConversationConnectionConfig.configParams.apiVersion] = ConversationConnectionConfig.apiVersion;\n    queryParams[ConversationConnectionConfig.configParams.token] = token;\n    queryParams[ConversationConnectionConfig.configParams.correlationId] = correlationId;\n    const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\n    return new WebsocketConnection(endpoint, queryParams, {}, new ConversationWebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\n  }\n\n} //# sourceMappingURL=ConversationConnectionFactory.js.map","map":null,"metadata":{},"sourceType":"module"}