{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\nexport class AudioSourceEvent extends PlatformEvent {\n  constructor(eventName, audioSourceId, eventType = EventType.Info) {\n    super(eventName, eventType);\n    this.privAudioSourceId = audioSourceId;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n}\nexport class AudioSourceInitializingEvent extends AudioSourceEvent {\n  constructor(audioSourceId) {\n    super(\"AudioSourceInitializingEvent\", audioSourceId);\n  }\n\n}\nexport class AudioSourceReadyEvent extends AudioSourceEvent {\n  constructor(audioSourceId) {\n    super(\"AudioSourceReadyEvent\", audioSourceId);\n  }\n\n}\nexport class AudioSourceOffEvent extends AudioSourceEvent {\n  constructor(audioSourceId) {\n    super(\"AudioSourceOffEvent\", audioSourceId);\n  }\n\n}\nexport class AudioSourceErrorEvent extends AudioSourceEvent {\n  constructor(audioSourceId, error) {\n    super(\"AudioSourceErrorEvent\", audioSourceId, EventType.Error);\n    this.privError = error;\n  }\n\n  get error() {\n    return this.privError;\n  }\n\n}\nexport class AudioStreamNodeEvent extends AudioSourceEvent {\n  constructor(eventName, audioSourceId, audioNodeId) {\n    super(eventName, audioSourceId);\n    this.privAudioNodeId = audioNodeId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n}\nexport class AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\n  constructor(audioSourceId, audioNodeId) {\n    super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\n  }\n\n}\nexport class AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\n  constructor(audioSourceId, audioNodeId) {\n    super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\n  }\n\n}\nexport class AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\n  constructor(audioSourceId, audioNodeId) {\n    super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\n  }\n\n}\nexport class AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\n  constructor(audioSourceId, audioNodeId, error) {\n    super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\n    this.privError = error;\n  }\n\n  get error() {\n    return this.privError;\n  }\n\n} //# sourceMappingURL=AudioSourceEvents.js.map","map":null,"metadata":{},"sourceType":"module"}