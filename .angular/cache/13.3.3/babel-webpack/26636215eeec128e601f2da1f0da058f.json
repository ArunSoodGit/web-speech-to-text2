{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { MessageType } from \"./ConnectionMessage\";\nimport { ArgumentNullError, InvalidOperationError } from \"./Error\";\nimport { createNoDashGuid } from \"./Guid\";\nexport class RawWebsocketMessage {\n  constructor(messageType, payload, id) {\n    this.privPayload = null;\n\n    if (!payload) {\n      throw new ArgumentNullError(\"payload\");\n    } // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n\n    if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\n      throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\n    }\n\n    if (messageType === MessageType.Text && !(typeof payload === \"string\")) {\n      throw new InvalidOperationError(\"Payload must be a string\");\n    }\n\n    this.privMessageType = messageType;\n    this.privPayload = payload;\n    this.privId = id ? id : createNoDashGuid();\n  }\n\n  get messageType() {\n    return this.privMessageType;\n  }\n\n  get payload() {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return this.privPayload;\n  }\n\n  get textContent() {\n    if (this.privMessageType === MessageType.Binary) {\n      throw new InvalidOperationError(\"Not supported for binary message\");\n    }\n\n    return this.privPayload;\n  }\n\n  get binaryContent() {\n    if (this.privMessageType === MessageType.Text) {\n      throw new InvalidOperationError(\"Not supported for text message\");\n    }\n\n    return this.privPayload;\n  }\n\n  get id() {\n    return this.privId;\n  }\n\n} //# sourceMappingURL=RawWebsocketMessage.js.map","map":null,"metadata":{},"sourceType":"module"}