{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\nimport { AudioOutputStream } from \"../sdk/Audio/AudioOutputStream\";\nimport { MessageDataStreamType } from \"./ServiceMessages/ActivityResponsePayload\";\nexport class DialogServiceTurnState {\n  constructor(manager, requestId) {\n    this.privRequestId = requestId;\n    this.privIsCompleted = false;\n    this.privAudioStream = null;\n    this.privTurnManager = manager;\n    this.resetTurnEndTimeout();\n  }\n\n  get audioStream() {\n    // Called when is needed to stream.\n    this.resetTurnEndTimeout();\n    return this.privAudioStream;\n  }\n\n  processActivityPayload(payload, audioFormat) {\n    if (payload.messageDataStreamType === MessageDataStreamType.TextToSpeechAudio) {\n      this.privAudioStream = AudioOutputStream.createPullStream();\n      this.privAudioStream.format = audioFormat !== undefined ? audioFormat : AudioOutputFormatImpl.getDefaultOutputFormat();\n    }\n\n    return this.privAudioStream;\n  }\n\n  endAudioStream() {\n    if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\n      this.privAudioStream.close();\n    }\n  }\n\n  complete() {\n    if (this.privTimeoutToken !== undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      clearTimeout(this.privTimeoutToken);\n    }\n\n    this.endAudioStream();\n  }\n\n  resetTurnEndTimeout() {\n    if (this.privTimeoutToken !== undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      clearTimeout(this.privTimeoutToken);\n    }\n\n    this.privTimeoutToken = setTimeout(() => {\n      this.privTurnManager.CompleteTurn(this.privRequestId);\n      return;\n    }, 2000);\n  }\n\n} //# sourceMappingURL=DialogServiceTurnState.js.map","map":null,"metadata":{},"sourceType":"module"}