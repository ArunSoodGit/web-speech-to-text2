{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionStatus, SimpleSpeechPhrase } from \"../../src/common.speech/Exports\";\nimport { NoMatchReason } from \"./Exports\";\n/**\n * Contains detailed information for NoMatch recognition results.\n * @class NoMatchDetails\n */\n\nexport class NoMatchDetails {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {NoMatchReason} reason - The no-match reason.\n   */\n  constructor(reason) {\n    this.privReason = reason;\n  }\n  /**\n   * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\n   * @member NoMatchDetails.fromResult\n   * @function\n   * @public\n   * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\n   * result - The recognition result that was not recognized.\n   * @returns {NoMatchDetails} The no match details object being created.\n   */\n\n\n  static fromResult(result) {\n    const simpleSpeech = SimpleSpeechPhrase.fromJSON(result.json);\n    let reason = NoMatchReason.NotRecognized;\n\n    switch (simpleSpeech.RecognitionStatus) {\n      case RecognitionStatus.BabbleTimeout:\n        reason = NoMatchReason.InitialBabbleTimeout;\n        break;\n\n      case RecognitionStatus.InitialSilenceTimeout:\n        reason = NoMatchReason.InitialSilenceTimeout;\n        break;\n\n      default:\n        reason = NoMatchReason.NotRecognized;\n        break;\n    }\n\n    return new NoMatchDetails(reason);\n  }\n  /**\n   * The reason the recognition was canceled.\n   * @member NoMatchDetails.prototype.reason\n   * @function\n   * @public\n   * @returns {NoMatchReason} Specifies the reason canceled.\n   */\n\n\n  get reason() {\n    return this.privReason;\n  }\n\n} //# sourceMappingURL=NoMatchDetails.js.map","map":null,"metadata":{},"sourceType":"module"}