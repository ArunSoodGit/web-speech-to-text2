{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\nimport { EventType, PlatformEvent } from \"../common/Exports\";\nexport class SpeechSynthesisEvent extends PlatformEvent {\n  constructor(eventName, requestId, eventType = EventType.Info) {\n    super(eventName, eventType);\n    this.privRequestId = requestId;\n  }\n\n  get requestId() {\n    return this.privRequestId;\n  }\n\n}\nexport class SynthesisTriggeredEvent extends SpeechSynthesisEvent {\n  constructor(requestId, sessionAudioDestinationId, turnAudioDestinationId) {\n    super(\"SynthesisTriggeredEvent\", requestId);\n    this.privSessionAudioDestinationId = sessionAudioDestinationId;\n    this.privTurnAudioDestinationId = turnAudioDestinationId;\n  }\n\n  get audioSessionDestinationId() {\n    return this.privSessionAudioDestinationId;\n  }\n\n  get audioTurnDestinationId() {\n    return this.privTurnAudioDestinationId;\n  }\n\n}\nexport class ConnectingToSynthesisServiceEvent extends SpeechSynthesisEvent {\n  constructor(requestId, authFetchEventId) {\n    super(\"ConnectingToSynthesisServiceEvent\", requestId);\n    this.privAuthFetchEventId = authFetchEventId;\n  }\n\n  get authFetchEventId() {\n    return this.privAuthFetchEventId;\n  }\n\n}\nexport class SynthesisStartedEvent extends SpeechSynthesisEvent {\n  constructor(requestId, authFetchEventId) {\n    super(\"SynthesisStartedEvent\", requestId);\n    this.privAuthFetchEventId = authFetchEventId;\n  }\n\n  get authFetchEventId() {\n    return this.privAuthFetchEventId;\n  }\n\n} //# sourceMappingURL=SynthesisEvents.js.map","map":null,"metadata":{},"sourceType":"module"}