{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { PropertyCollection, ResultReason, SynthesisResult, VoiceInfo } from \"./Exports\";\n/**\n * Defines result of speech synthesis.\n * @class SynthesisVoicesResult\n * Added in version 1.20.0\n */\n\nexport class SynthesisVoicesResult extends SynthesisResult {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param requestId - result id for request.\n   * @param json - json payload from endpoint.\n   */\n  constructor(requestId, json, errorDetails) {\n    if (Array.isArray(json)) {\n      super(requestId, ResultReason.VoicesListRetrieved, undefined, new PropertyCollection());\n      this.privVoices = [];\n\n      for (const item of json) {\n        this.privVoices.push(new VoiceInfo(item));\n      }\n    } else {\n      super(requestId, ResultReason.Canceled, errorDetails ? errorDetails : \"Error information unavailable\", new PropertyCollection());\n    }\n  }\n  /**\n   * The list of voices\n   * @member SynthesisVoicesResult.prototype.voices\n   * @function\n   * @public\n   * @returns {VoiceInfo[]} List of synthesized voices.\n   */\n\n\n  get voices() {\n    return this.privVoices;\n  }\n\n} //# sourceMappingURL=SynthesisVoicesResult.js.map","map":null,"metadata":{},"sourceType":"module"}