{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\n/**\n * Represents a keyword recognition model for recognizing when\n * the user says a keyword to initiate further speech recognition.\n * @class KeywordRecognitionModel\n */\n\nexport class KeywordRecognitionModel {\n  /**\n   * Create and initializes a new instance.\n   * @constructor\n   */\n  constructor() {\n    this.privDisposed = false;\n    return;\n  }\n  /**\n   * Creates a keyword recognition model using the specified filename.\n   * @member KeywordRecognitionModel.fromFile\n   * @function\n   * @public\n   * @param {string} fileName - A string that represents file name for the keyword recognition model.\n   * Note, the file can point to a zip file in which case the model\n   * will be extracted from the zip.\n   * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n   */\n\n\n  static fromFile(fileName) {\n    Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\n    throw new Error(\"Not yet implemented.\");\n  }\n  /**\n   * Creates a keyword recognition model using the specified filename.\n   * @member KeywordRecognitionModel.fromStream\n   * @function\n   * @public\n   * @param {string} file - A File that represents file for the keyword recognition model.\n   * Note, the file can point to a zip file in which case the model will be extracted from the zip.\n   * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n   */\n\n\n  static fromStream(file) {\n    Contracts.throwIfNull(file, \"file\");\n    throw new Error(\"Not yet implemented.\");\n  }\n  /**\n   * Dispose of associated resources.\n   * @member KeywordRecognitionModel.prototype.close\n   * @function\n   * @public\n   */\n\n\n  close() {\n    if (this.privDisposed) {\n      return;\n    }\n\n    this.privDisposed = true;\n  }\n\n} //# sourceMappingURL=KeywordRecognitionModel.js.map","map":null,"metadata":{},"sourceType":"module"}