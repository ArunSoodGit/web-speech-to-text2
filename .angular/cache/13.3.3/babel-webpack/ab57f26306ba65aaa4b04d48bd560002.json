{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/* eslint-disable max-classes-per-file */\nimport { EventType, PlatformEvent } from \"./PlatformEvent\";\nexport class OCSPEvent extends PlatformEvent {\n  constructor(eventName, eventType, signature) {\n    super(eventName, eventType);\n    this.privSignature = signature;\n  }\n\n}\nexport class OCSPMemoryCacheHitEvent extends OCSPEvent {\n  constructor(signature) {\n    super(\"OCSPMemoryCacheHitEvent\", EventType.Debug, signature);\n  }\n\n}\nexport class OCSPCacheMissEvent extends OCSPEvent {\n  constructor(signature) {\n    super(\"OCSPCacheMissEvent\", EventType.Debug, signature);\n  }\n\n}\nexport class OCSPDiskCacheHitEvent extends OCSPEvent {\n  constructor(signature) {\n    super(\"OCSPDiskCacheHitEvent\", EventType.Debug, signature);\n  }\n\n}\nexport class OCSPCacheUpdateNeededEvent extends OCSPEvent {\n  constructor(signature) {\n    super(\"OCSPCacheUpdateNeededEvent\", EventType.Debug, signature);\n  }\n\n}\nexport class OCSPMemoryCacheStoreEvent extends OCSPEvent {\n  constructor(signature) {\n    super(\"OCSPMemoryCacheStoreEvent\", EventType.Debug, signature);\n  }\n\n}\nexport class OCSPDiskCacheStoreEvent extends OCSPEvent {\n  constructor(signature) {\n    super(\"OCSPDiskCacheStoreEvent\", EventType.Debug, signature);\n  }\n\n}\nexport class OCSPCacheUpdateCompleteEvent extends OCSPEvent {\n  constructor(signature) {\n    super(\"OCSPCacheUpdateCompleteEvent\", EventType.Debug, signature);\n  }\n\n}\nexport class OCSPStapleReceivedEvent extends OCSPEvent {\n  constructor() {\n    super(\"OCSPStapleReceivedEvent\", EventType.Debug, \"\");\n  }\n\n}\nexport class OCSPWSUpgradeStartedEvent extends OCSPEvent {\n  constructor(serialNumber) {\n    super(\"OCSPWSUpgradeStartedEvent\", EventType.Debug, serialNumber);\n  }\n\n}\nexport class OCSPCacheEntryExpiredEvent extends OCSPEvent {\n  constructor(serialNumber, expireTime) {\n    super(\"OCSPCacheEntryExpiredEvent\", EventType.Debug, serialNumber);\n    this.privExpireTime = expireTime;\n  }\n\n}\nexport class OCSPCacheEntryNeedsRefreshEvent extends OCSPEvent {\n  constructor(serialNumber, startTime, expireTime) {\n    super(\"OCSPCacheEntryNeedsRefreshEvent\", EventType.Debug, serialNumber);\n    this.privExpireTime = expireTime;\n    this.privStartTime = startTime;\n  }\n\n}\nexport class OCSPCacheHitEvent extends OCSPEvent {\n  constructor(serialNumber, startTime, expireTime) {\n    super(\"OCSPCacheHitEvent\", EventType.Debug, serialNumber);\n    this.privExpireTime = expireTime;\n    this.privExpireTimeString = new Date(expireTime).toLocaleDateString();\n    this.privStartTime = startTime;\n    this.privStartTimeString = new Date(startTime).toLocaleTimeString();\n  }\n\n}\nexport class OCSPVerificationFailedEvent extends OCSPEvent {\n  constructor(serialNumber, error) {\n    super(\"OCSPVerificationFailedEvent\", EventType.Debug, serialNumber);\n    this.privError = error;\n  }\n\n}\nexport class OCSPCacheFetchErrorEvent extends OCSPEvent {\n  constructor(serialNumber, error) {\n    super(\"OCSPCacheFetchErrorEvent\", EventType.Debug, serialNumber);\n    this.privError = error;\n  }\n\n}\nexport class OCSPResponseRetrievedEvent extends OCSPEvent {\n  constructor(serialNumber) {\n    super(\"OCSPResponseRetrievedEvent\", EventType.Debug, serialNumber);\n  }\n\n}\nexport class OCSPCacheUpdateErrorEvent extends OCSPEvent {\n  constructor(serialNumber, error) {\n    super(\"OCSPCacheUpdateErrorEvent\", EventType.Debug, serialNumber);\n    this.privError = error;\n  }\n\n} //# sourceMappingURL=OCSPEvents.js.map","map":null,"metadata":{},"sourceType":"module"}