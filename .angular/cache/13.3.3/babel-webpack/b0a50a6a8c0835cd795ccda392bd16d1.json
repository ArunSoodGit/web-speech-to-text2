{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { PropertyId } from \"../sdk/Exports\";\n/**\n * Represents the JSON used in the synthesis.context message sent to the speech service.\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\n */\n\nexport class SynthesisContext {\n  constructor(speechSynthesizer) {\n    this.privContext = {};\n    this.privSpeechSynthesizer = speechSynthesizer;\n  }\n  /**\n   * Adds a section to the synthesis.context object.\n   * @param sectionName Name of the section to add.\n   * @param value JSON serializable object that represents the value.\n   */\n\n\n  setSection(sectionName, value) {\n    this.privContext[sectionName] = value;\n  }\n  /**\n   * Sets the audio output format for synthesis context generation.\n   * @param format {AudioOutputFormatImpl} the output format\n   */\n\n\n  set audioOutputFormat(format) {\n    this.privAudioOutputFormat = format;\n  }\n\n  toJSON() {\n    const synthesisSection = this.buildSynthesisContext();\n    this.setSection(\"synthesis\", synthesisSection);\n    return JSON.stringify(this.privContext);\n  }\n\n  buildSynthesisContext() {\n    return {\n      audio: {\n        metadataOptions: {\n          bookmarkEnabled: !!this.privSpeechSynthesizer.bookmarkReached,\n          punctuationBoundaryEnabled: this.privSpeechSynthesizer.properties.getProperty(PropertyId.SpeechServiceResponse_RequestPunctuationBoundary, !!this.privSpeechSynthesizer.wordBoundary),\n          sentenceBoundaryEnabled: this.privSpeechSynthesizer.properties.getProperty(PropertyId.SpeechServiceResponse_RequestSentenceBoundary, false),\n          sessionEndEnabled: true,\n          visemeEnabled: !!this.privSpeechSynthesizer.visemeReceived,\n          wordBoundaryEnabled: this.privSpeechSynthesizer.properties.getProperty(PropertyId.SpeechServiceResponse_RequestWordBoundary, !!this.privSpeechSynthesizer.wordBoundary)\n        },\n        outputFormat: this.privAudioOutputFormat.requestAudioFormatString\n      },\n      language: {\n        autoDetection: this.privSpeechSynthesizer.autoDetectSourceLanguage\n      }\n    };\n  }\n\n} //# sourceMappingURL=SynthesisContext.js.map","map":null,"metadata":{},"sourceType":"module"}