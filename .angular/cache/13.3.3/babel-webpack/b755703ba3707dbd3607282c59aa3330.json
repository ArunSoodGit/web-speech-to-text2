{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\nimport { VoiceProfileType } from \"./Exports\";\n/**\n * Defines SpeakerIdentificationModel class for Speaker Recognition\n * Model contains a set of profiles against which to identify speaker(s)\n * @class SpeakerIdentificationModel\n */\n\nexport class SpeakerIdentificationModel {\n  constructor(profiles) {\n    this.privVoiceProfiles = [];\n    Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\n\n    if (profiles.length === 0) {\n      throw new Error(\"Empty Voice Profiles array\");\n    }\n\n    profiles.forEach(profile => {\n      if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\n        throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\n      }\n\n      this.privVoiceProfiles.push(profile);\n    });\n  }\n\n  static fromProfiles(profiles) {\n    return new SpeakerIdentificationModel(profiles);\n  }\n\n  get voiceProfileIds() {\n    return this.privVoiceProfiles.map(profile => profile.profileId).join(\",\");\n  }\n\n} //# sourceMappingURL=SpeakerIdentificationModel.js.map","map":null,"metadata":{},"sourceType":"module"}