{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport * as fs from \"fs\";\nimport { Contracts } from \"../Contracts\";\nexport class AudioFileWriter {\n  constructor(filename) {\n    Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available, please use Push or PullAudioOutputStream\");\n    this.privFd = fs.openSync(filename, \"w\");\n  }\n\n  set format(format) {\n    Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\n    this.privAudioFormat = format;\n    let headerOffset = 0;\n\n    if (this.privAudioFormat.hasHeader) {\n      headerOffset = this.privAudioFormat.header.byteLength;\n    }\n\n    if (this.privFd !== undefined) {\n      this.privWriteStream = fs.createWriteStream(\"\", {\n        fd: this.privFd,\n        start: headerOffset,\n        autoClose: false\n      });\n    }\n  }\n\n  write(buffer) {\n    Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\n\n    if (this.privWriteStream !== undefined) {\n      this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\n    }\n  }\n\n  close() {\n    if (this.privFd !== undefined) {\n      this.privWriteStream.on(\"finish\", () => {\n        if (this.privAudioFormat.hasHeader) {\n          this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten);\n          fs.writeSync(this.privFd, new Int8Array(this.privAudioFormat.header), 0, this.privAudioFormat.header.byteLength, 0);\n        }\n\n        fs.closeSync(this.privFd);\n        this.privFd = undefined;\n      });\n      this.privWriteStream.end();\n    }\n  }\n\n  id() {\n    return this.privId;\n  }\n\n} //# sourceMappingURL=AudioFileWriter.js.map","map":null,"metadata":{},"sourceType":"module"}