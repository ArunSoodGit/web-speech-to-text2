{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unsafe-return */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { InvalidOperationError } from \"./Error\";\nimport { createNoDashGuid } from \"./Guid\";\nexport var MessageType = /*#__PURE__*/(() => {\n  (function (MessageType) {\n    MessageType[MessageType[\"Text\"] = 0] = \"Text\";\n    MessageType[MessageType[\"Binary\"] = 1] = \"Binary\";\n  })(MessageType || (MessageType = {}));\n\n  return MessageType;\n})();\nexport class ConnectionMessage {\n  constructor(messageType, body, headers, id) {\n    this.privBody = null;\n\n    if (messageType === MessageType.Text && body && !(typeof body === \"string\")) {\n      throw new InvalidOperationError(\"Payload must be a string\");\n    }\n\n    if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\n      throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\n    }\n\n    this.privMessageType = messageType; // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n    this.privBody = body;\n    this.privHeaders = headers ? headers : {};\n    this.privId = id ? id : createNoDashGuid();\n\n    switch (this.messageType) {\n      case MessageType.Binary:\n        this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\n        break;\n\n      case MessageType.Text:\n        this.privSize = this.textBody.length;\n    }\n  }\n\n  get messageType() {\n    return this.privMessageType;\n  }\n\n  get headers() {\n    return this.privHeaders;\n  }\n\n  get body() {\n    return this.privBody;\n  }\n\n  get textBody() {\n    if (this.privMessageType === MessageType.Binary) {\n      throw new InvalidOperationError(\"Not supported for binary message\");\n    }\n\n    return this.privBody;\n  }\n\n  get binaryBody() {\n    if (this.privMessageType === MessageType.Text) {\n      throw new InvalidOperationError(\"Not supported for text message\");\n    }\n\n    return this.privBody;\n  }\n\n  get id() {\n    return this.privId;\n  }\n\n} //# sourceMappingURL=ConnectionMessage.js.map","map":null,"metadata":{},"sourceType":"module"}