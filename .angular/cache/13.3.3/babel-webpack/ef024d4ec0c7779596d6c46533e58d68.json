{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/**\n * Allows additions of new phrases to improve speech recognition.\n *\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\n * to the speech service.\n */\nexport class PhraseListGrammar {\n  constructor(recogBase) {\n    this.privGrammerBuilder = recogBase.dynamicGrammar;\n  }\n  /**\n   * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\n   * @param recognizer The recognizer to add phrase lists to.\n   */\n\n\n  static fromRecognizer(recognizer) {\n    const recoBase = recognizer.internalData;\n    return new PhraseListGrammar(recoBase);\n  }\n  /**\n   * Adds a single phrase to the current recognizer.\n   * @param phrase Phrase to add.\n   */\n\n\n  addPhrase(phrase) {\n    this.privGrammerBuilder.addPhrase(phrase);\n  }\n  /**\n   * Adds multiple phrases to the current recognizer.\n   * @param phrases Array of phrases to add.\n   */\n\n\n  addPhrases(phrases) {\n    this.privGrammerBuilder.addPhrase(phrases);\n  }\n  /**\n   * Clears all phrases added to the current recognizer.\n   */\n\n\n  clear() {\n    this.privGrammerBuilder.clearPhrases();\n  }\n\n} //# sourceMappingURL=PhraseListGrammar.js.map","map":null,"metadata":{},"sourceType":"module"}