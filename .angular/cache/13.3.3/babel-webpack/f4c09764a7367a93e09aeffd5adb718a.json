{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { CancellationErrorCode, CancellationReason, ResultReason } from \"../sdk/Exports\";\nimport { RecognitionStatus } from \"./Exports\";\nexport class EnumTranslation {\n  static implTranslateRecognitionResult(recognitionStatus) {\n    let reason = ResultReason.Canceled;\n\n    switch (recognitionStatus) {\n      case RecognitionStatus.Success:\n        reason = ResultReason.RecognizedSpeech;\n        break;\n\n      case RecognitionStatus.NoMatch:\n      case RecognitionStatus.InitialSilenceTimeout:\n      case RecognitionStatus.BabbleTimeout:\n      case RecognitionStatus.EndOfDictation:\n        reason = ResultReason.NoMatch;\n        break;\n\n      case RecognitionStatus.Error:\n      case RecognitionStatus.BadRequest:\n      case RecognitionStatus.Forbidden:\n      default:\n        reason = ResultReason.Canceled;\n        break;\n    }\n\n    return reason;\n  }\n\n  static implTranslateCancelResult(recognitionStatus) {\n    let reason = CancellationReason.EndOfStream;\n\n    switch (recognitionStatus) {\n      case RecognitionStatus.Success:\n      case RecognitionStatus.EndOfDictation:\n      case RecognitionStatus.NoMatch:\n        reason = CancellationReason.EndOfStream;\n        break;\n\n      case RecognitionStatus.InitialSilenceTimeout:\n      case RecognitionStatus.BabbleTimeout:\n      case RecognitionStatus.Error:\n      case RecognitionStatus.BadRequest:\n      case RecognitionStatus.Forbidden:\n      default:\n        reason = CancellationReason.Error;\n        break;\n    }\n\n    return reason;\n  }\n\n  static implTranslateCancelErrorCode(recognitionStatus) {\n    let reason = CancellationErrorCode.NoError;\n\n    switch (recognitionStatus) {\n      case RecognitionStatus.Error:\n        reason = CancellationErrorCode.ServiceError;\n        break;\n\n      case RecognitionStatus.TooManyRequests:\n        reason = CancellationErrorCode.TooManyRequests;\n        break;\n\n      case RecognitionStatus.BadRequest:\n        reason = CancellationErrorCode.BadRequestParameters;\n        break;\n\n      case RecognitionStatus.Forbidden:\n        reason = CancellationErrorCode.Forbidden;\n        break;\n\n      default:\n        reason = CancellationErrorCode.NoError;\n        break;\n    }\n\n    return reason;\n  }\n\n  static implTranslateErrorDetails(cancellationErrorCode) {\n    let errorDetails = \"The speech service encountered an internal error and could not continue.\";\n\n    switch (cancellationErrorCode) {\n      case CancellationErrorCode.Forbidden:\n        errorDetails = \"The recognizer is using a free subscription that ran out of quota.\";\n        break;\n\n      case CancellationErrorCode.BadRequestParameters:\n        errorDetails = \"Invalid parameter or unsupported audio format in the request.\";\n        break;\n\n      case CancellationErrorCode.TooManyRequests:\n        errorDetails = \"The number of parallel requests exceeded the number of allowed concurrent transcriptions.\";\n        break;\n\n      default:\n        break;\n    }\n\n    return errorDetails;\n  }\n\n} //# sourceMappingURL=EnumTranslation.js.map","map":null,"metadata":{},"sourceType":"module"}